###########################################################################
###########################################################################
##                                                                       ##
##                                                                       ##
##       888888888888888888b.        d8888 .d8888b.  .d8888b.            ##
##             888    888   Y88b      d88888d88P  Y88bd88P               ##
##             888    888    888     d88P888888    888Y88b.              ##
##             888    888   d88P    d88P 888888        "Y888b.           ##
##             888    8888888P"    d88P  888888           "Y88b.         ##
##             888    888 T88b    d88P   888888    888      "888         ##
##             888    888  T88b  d8888888888Y88b  d88PY88b  d88P         ##
##             888    888   T88bd88P     888 "Y8888P"  "Y8888P"          ##
##                                                                       ##
##                                                                       ##
###########################################################################
###########################################################################
##                                                                       ##
##            CONFIGURATION FILE FOR TRACS CLI-Execution                 ##
##                                                                       ##
##     This is the configuration file for the Comand Line Interface      ## 
## part of TRACS. It contains all the necessary values for the program   ## 
## to run properly. There are different seccions with different          ##
## parameters according to what those parameters correspont to.          ##
##                                                                       ##
##     All the parameters are clearly labeled and accompanied by a       ##
## description of what they do and the units they are in.                ##
##                                                                       ##
##     You will also find a brief description of how TRACS works         ##
## internally and a trouble-shooting guide to solve the most common      ##
## problems encountered during TRACS instalation.                        ##
##                                                                       ##
###########################################################################
###########################################################################
##                                                                       ##
##                           BASIC GUIDELINES                            ##
##                                                                       ##
##    Usage of the configuration file is very simple and only requires   ##
## to follow two simple rules:                                           ##
##       - Only change the values and keep the rest EXACTLY the same     ##
##       - DON'T TOUCH anything else                                     ##
##                                                                       ##
##    If you find this instructions too easy to follow please know that  ##
## the parser used by TRACS reads values between '=' and ' ;' and stores  ##
## them in the corresponding variables according to the order they are   ##
## placed on the file. Any line starting with '#' is regarded as comment ## 
## and will be automatically omitted.                                    ##
##                                                                       ##
##                                                                       ##
###########################################################################
###########################################################################
##                                                                       ##
##                       LICENSE AND COPYRIGHT                           ##
##                                                                       ##
##    TRACS is released  under GPLv3 license. You should have gotten a   ##
## copy of the license with the software but in case you haven't, please ##
## check: [LINK HERE]                                                    ##
##                                                                       ##
##  ---- TL ;DR ----                                                     ##
##    Use, copy, modify if desired ; give credit if appropiate ;         ##
## contribute if improved.                                               ##
##                                                                       ##
###########################################################################
###########################################################################



#-------------------------DETECTOR PROPERTIES-----------------------------#
#                                                                      
#    Here one should insert the properties of the detector to be simulated
# but not the technical details about the computational part that takes 
# part inside the class SMSDetector. 
#             !!!!! Only Physical Properties Here !!!!!

# Distance between detector edges in the conventional Z-direction
# This is typically called thickness and can be viewed as the distance 
# between electrodes connected to the detector
Depth = 300.0   # Double in micrometers

# Width of the read-out strips
Width = 25.0   # Double in micrometers

# Distance between read-out strips
Pitch = 80.0   # Double in micrometers

# Number of neighbouring strips simulated on each side of the main 
# read-out strip (where we read and collect signal)
NeighbouringStrips = 2   # 0 for a diode

# Temperature of the detector, affects mobility
Temperature = 300.0   # Double in Kelvin

# Trapping time-constant, affects total collected signal
TrappingTime = 3.0e-9   # Double in seconds

# Fluence to which the detector has been irradiated. Controls whether 
# simulated diode is irradiated(>0) or not(==0)
Fluence = 1.0e14   # Double in neutronEquivalents


# Number of threads used for simulation. Crashes if nThreads != 1
NumberOfThreads = 1   # Integer

#---------------------------- MESH PROPERTIES ----------------------------#
#    
#    For solving the PDEs(ie.: Poisson's equation) TRACS divides the area 
# of the detector in cells using a mesh. Here you can choose wether you 
# want to have coarse mesh for faster simulation or rather prefer a finner 
# more accurate PDE solution

# Number of cells for the mesh in the X direction
CellsX = 150   # Integer

# Number of cells for the mesh in the Y direction
CellsY = 150   # Integer

#-------------------------- DOPING PROPERTIES ----------------------------#
#
#    Here you can decide which type of substrate and implant you want to 
# simulate. Options are 'p' for p-doped (acceptor impurities) or 'n' for
# n-doped (donnor impurities).

# Bulk type. Main detector volumen where carriers drift
Bulk = 'p'   # Character

# Implant  type. Highest doped volumen.
Implant = 'n'   # Character

#----------------------- ILLUMINATION PROPERTIES -------------------------#
#
#     Here you can state the properties of the laser used for carrier 
# generation. The properties are implemented through the carrier file that 
# TRACS reads as imput. This values are only used for naming the 
# output and for further analysis using TCT+ software.

# Wavelenght of the laser shot at the detector, typically is IR for 
# edge-TCT (~1064nm) and red for top/bottom-TCT (~663nm)
Lambda = 1064   # In nm

# Type of scan to be simulated. Typical scans are: 
#   -edge-TCT: IR laser moved along Z-axis
#   -top-TCT: Red laser, one shot at different voltages or scan on X-Y
#   -bottom-TCT: Red laser, one shot at different voltages or scan on X-Y
##################SCAN ON X-Y IS NOT IMPLEMENTED YET######################
ScanType = "edge"   # edge/top/bottom


#------------------------ ELECTRONICS SHAPING ----------------------------#

#    The electronics shaping on TRACS includes not only basic RC-shaping 
# but also convolution with the amplifier transfer-function(TF). The 
# amplifier TF is an actual amplifier response to a delta signal saved as 
# a ROOT histogram/file. The user can use his own TF as long as it is in 
# the same format as the original. The original can be found inside 
# TRACS/src/files2move2bin/ 

# Capacitance of the capacitor in the RC circuit.
Capacitance = 5.e-12   # in Farad

# Resistance of the circuit is assumed to be 50 Ohm and cannot be changed 
# for the moment

#----------------------- SIMULATION TIMING -------------------------------#

#     Here we configure the time properties of the simulation; namely the 
# time step and the maximum time for the simulation. The most important 
# parameter is the Time Step, it should be small enough to yeild accurate 
# output but large enough so that the simulation doesn't take forever. 
# The TotalTime simulated should be big enough to contain all the signal.

# Time elapsed between simulation steps. The finer the time step the 
# more accurate the simulation will be; on the other hand, the coarser 
# the time step, the faster the simulation will finish
TimeStep = 5.e-11   # in seconds (<1 ns)

# Time elapsed from the start to the end of the simulation. As long as 
# the whole signal is collected before the end of the simulation it has 
# no effect of the results
TotalTime = 1.5e-8   # in seconds ( ~10ns)

#------------------------ VOLTAGE PROPERTIES -----------------------------#

#     In this section we set up the voltages that will be applied to the 
# detector. These voltages include the depletion voltage as well as the 
# various bias voltages that one may wish to apply to the detector.

# Voltage applied to the detector in reverse mode (reverse bias) with 
# respect to the natural voltage appearing in the detector due to p-n 
# junction. This is a legacy value that will be eliminated as soon as we 
# implement a loop to simulate different voltages at once.
BiasVoltage = 350.   # in Volts # Still needed, should get rid of it later

# Starting voltage for the simulation. One usually wishes that it is 
# higher than the depletion voltage for TRACS does not simulate thermal 
# diffusion effects.
InitialVoltage = 350 #volts

# Difference in bias voltage between one simulation and the next one.
VoltageStep = 350 # in volts

# Maximum bias voltage applied to the detector. The maximum voltage 
# simulated may be lower if it cannot be reached from InitialVoltage 
# in steps of size VoltageStep.
MaxVoltage = 350. # in volts  

# Value of the Bias voltage at which the detector is fully depleted. For 
# non-irradiated samples it allows us to calculate the Neff distribution 
# and impurity concentration.For irradiated samples it is completely 
# meaningless as the Neff is defined separately
DepletionVoltage = 250.0 # in volts

#-------------------------- Z-SCAN PROPERTIES ----------------------------#

#     This part is meanly designed for edge-TCT/TPA scans but one can 
# implement this scan for top/bottom-TCT if one wishes to do some exotic
# (non-real world) simulations.
#
#     Z-Scan should be a self-explanatory name as it refers to a scan of 
# the detector performed by moving the laser (or laser focus in TPA) in 
# the Z direction. As for now a full Z-scan is assumed. 

# Margin refers to how far away from the detector one wishes to start and 
# stop the scan. This should help in later analysis and should ensure that 
# the whole laser beam is outside the detector in the firsts and lasts 
# meassurements. A typical value would be a bit bigger than half the 
# beam width at its widest point.
Margin = 10 # in micrometers

# Quite intuitively ScanStep refers to the distance moved the laser along 
# the Z-axis from one waveform simulation to the other. Recomended 
# ScanStep values range from 1-3 to 10 micrometers but can be made as big 
# or small as desired.
ScanStep = 3.0000  # in microns 

###########################################################################
##                                                                       ##
##                BRIEF INTRODUCTION TO HOW TRACS WORKS                  ##
##                                                                       ##
##     A summary of how TRACS functions can be found here. As a brief    ##
## introduction it is meant for young padowams that have never seen      ##
## TRACS before. More experienced users or anyone with some experience   ##
## in C++11 or detector simulation might find it more useful to read the ##
## code and comments in folder TRACS/src/                                ##
##                                                                       ##
##    If you decide to use/develop TRACS you will be part of a great     ##
## scientific project but you should proceed at your own risk as the     ##
## only thing TRACS usage/development guarantees is headeaches and       ##
## despairation.                                                         ##
##                                                                       ##
###########################################################################


#----------------------------- THE INPUTS --------------------------------#


#--------------------- SETTING UP THE SIMULATION--------------------------#

   
#--------------------------- SIMULATION --------------------------------#


#--------------------------- THE OUTPUT--------------------------------#
